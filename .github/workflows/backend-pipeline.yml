name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - "backend/**"
      - ".github/workflows/backend-pipeline.yml"
  workflow_dispatch:

env:
  ACR_LOGIN_SERVER: tejaacr98765.azurecr.io
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build_and_push_backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build & Push Product Service
        run: |
          az acr login --name tejaacr98765
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }} ./backend/product_service/
          docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }}

      - name: Build & Push Order Service
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }} ./backend/order_service/
          docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }}

      - name: Deploy Backend
        run: |
          az aks get-credentials --resource-group rg-teja --name aks-teja --overwrite-existing
          kubectl apply -f k8s/product-db.yaml
          kubectl apply -f k8s/order-db.yaml
          kubectl apply -f k8s/product-service.yaml
          kubectl apply -f k8s/order-service.yaml
          kubectl set image deployment/product-service-w08e1 product-service-container=${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }}
          kubectl set image deployment/order-service-w08e1 order-service-container=${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }}
