name: Frontend CI/CD - Build, Push and Deploy
 








#triggering code
on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-pipeline.yml'

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build_and_push_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker login
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u "${{ secrets.ACR_USERNAME }}" --password-stdin

      - name: Build & Push Frontend
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }} ./frontend/
          docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}

  deploy_frontend:
    runs-on: ubuntu-latest
    needs: build_and_push_frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_AKS_CLUSTER }} \
            --overwrite-existing

      - name: Deploy Frontend
        run: |
          kubectl apply -f k8s/frontend.yaml

      - name: Wait for Frontend IP
        run: |
          echo "Waiting up to 5 min for Frontend service IP..."
          for i in {1..60}; do
            FRONTEND_IP=$(kubectl get svc frontend -o jsonpath='{.status.loadBalancer.ingress[0].ip}' || true)
            if [[ -n "$FRONTEND_IP" ]]; then
              echo "üåç Frontend available at: http://$FRONTEND_IP"
              break
            fi
            sleep 5
          done
